name: ci
on:
  pull_request:
    branches: [main]
env:
  CARGO_TERM_COLOR: always
jobs:
  # rustfmt:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: Swatinem/rust-cache@v2
  #       with:
  #         workspaces: |
  #           "containerd-shim-* -> target"
  #     - run: 
  #         rustup toolchain install nightly --component rustfmt
  #     - name: Setup build env
  #       run: |
  #         ./scripts/setup-linux.sh
  #     - name: fmt
  #       run: |
  #         make fmt
  # build-wasm-images:
  #   uses: ./.github/workflows/docker-build-push.yaml
  #   with:
  #     test: true
  # build:
  #   uses: ./.github/workflows/build.yaml
  # publish-node-installer-image:
  #   uses: ./.github/workflows/node-installer.yaml
  #   needs: build
  #   # This action requires use of the GITHUB_TOKEN to publish the image
  #   # By default, PRs from forks don't have access, so we only run when the PR branch is on origin.
  #   if: ${{ ! github.event.pull_request.head.repo.fork }}
  #   with:
  #     ref: ${{ github.ref }}
  test:
    # needs: build
    runs-on: ubuntu-latest
    env:
      ARCH: x86_64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: azure/setup-kubectl@v4
      - uses: fermyon/actions/spin/setup@v1
        with:
          version: "v2.4.2"

      - name: Setup build env
        run: |
          ./scripts/setup-linux.sh
      - name: Extract containerd-shim-spin-linux-${{ env.ARCH }}
        run: |
          mkdir -p ./bin
          wget https://filebin.net/o9vwgr6tlyd9k5e6/containerd-shim-spin-v2 -O bin/containerd-shim-spin-v2
          chmod +x bin/containerd-shim-spin-v2
          echo "ee872dc4225d7f917689247a6a5eb976990dd8e1ac6a05d3de56cdde88933311  ./bin/containerd-shim-spin-v2" | sha256sum --check
      - name: install k3d
        run: make install-k3d
        working-directory: ./deployments/k3d
      - name: run integration tests
        run: BIN_DIR="./bin" make integration-tests

      - name: run collect debug logs
        if: failure()
        run: make tests/collect-debug-logs
 
      - name: upload debug logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: debug-logs/
          retention-days: 5

      - name: clean up k3d
        if: always()
        run: make tests/clean
